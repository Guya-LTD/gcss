/// Map deep get
/// @author
/// @access public
/// @param {Map} $map - Map
/// @param {Arglist} $keys - Key chain
/// @return {*} - Desired value
@function map-deep-get($map, $keys...)
    @each $key in $keys
        $map: map-get($map, $key)
    @return $map
  
/// Themify mixin
/// @access private
/// @author 
/// @param String $property - Property to themify
/// @param String $key - Key color to use from theme
/// @param Map $themes [$themes] - Map of themes to use
@mixin themify($property, $key, $themes: $themes) 
  // Iterate over the themes
  @each $theme, $colors in $themes 
    // Create a selector (e.g. `.media.theme-unicorn, .theme-unicorn .media`)
    &.theme-#{$theme},
    .theme-#{$theme} & 
      // Output the declaration
      #{$property}: map-deep-get($colors, $key, $property)
    
  




/// Shorthand to themify color through `themify` mixin
/// @access public
/// @see mixin themify
@mixin font-family($arguments...) 
  @include themify('font-family', $arguments...)


/// Shorthand to themify color through `themify` mixin
/// @access public
/// @see mixin themify
@mixin color($arguments...) 
  @include themify('color', $arguments...)


/// Shorthand to themify border-color through `themify` mixin
/// @access public
/// @see mixin themify
@mixin border($arguments...) 
  @include themify('border-color', $arguments...)


/// Shorthand to themify background-color through `themify` mixin
/// @access public
/// @see mixin themify
@mixin background($arguments...) 
  @include themify('background', $arguments...)


/// Shorthand to themify fill through `themify` mixin
/// @access public
/// @see mixin themify
@mixin fill($arguments...) 
  @include themify('fill', $arguments...)